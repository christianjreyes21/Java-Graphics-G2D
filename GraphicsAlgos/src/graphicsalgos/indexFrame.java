/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package graphicsalgos;

import java.awt.*;
import java.awt.geom.*;
import static java.lang.Math.abs;
import java.util.ArrayList;
import javax.swing.JPanel;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author Patrick
 */
public class indexFrame extends javax.swing.JFrame {
@SuppressWarnings("unchecked")
    // int[] xPointsDDA = new int[50];
    // int[] yPointsDDA = new int[50];
    ArrayList xPointsGiven = new ArrayList();
    ArrayList yPointsGiven = new ArrayList();

    int num = 0;
    int num2 = 0;
    boolean plot = false;

    /**
     * Creates new form indexFrame
     */
    public indexFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        FirstX1 = new javax.swing.JTextField();
        FirstY1 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        SecondX1 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        SecondY1 = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        BresX5 = new javax.swing.JTextField();
        BresY5 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        BresX6 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        BresY6 = new javax.swing.JTextField();
        jButton10 = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        MainPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        DDAButton = new javax.swing.JButton();
        BresenhamButton = new javax.swing.JButton();
        SymmetricButton = new javax.swing.JButton();
        MidpointButton = new javax.swing.JButton();
        DDAPanel = new javax.swing.JPanel();
        FirstX = new javax.swing.JTextField();
        FirstY = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        SecondX = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        SecondY = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        PointsPanel = new javax.swing.JPanel();
        GraphPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        PointsArea = new javax.swing.JTextArea();
        jButton12 = new javax.swing.JButton();
        MidpointPanel = new javax.swing.JPanel();
        MidH = new javax.swing.JTextField();
        MidR = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        MidK = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jLabel33 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        SymmetricPanel = new javax.swing.JPanel();
        SymH = new javax.swing.JTextField();
        SymR = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        SymK = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        jLabel32 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        BresenhamPanel = new javax.swing.JPanel();
        BresX1 = new javax.swing.JTextField();
        BresY1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        BresX2 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        BresY2 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        jButton1.setText("jButton1");

        FirstX1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FirstX1ActionPerformed(evt);
            }
        });

        FirstY1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FirstY1ActionPerformed(evt);
            }
        });

        jLabel17.setText("X:");

        jLabel18.setText("Y:");

        jLabel19.setText("to");

        SecondX1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SecondX1ActionPerformed(evt);
            }
        });

        jLabel20.setText("X:");

        SecondY1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SecondY1ActionPerformed(evt);
            }
        });

        jButton9.setText("Calculate");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel21.setText("Y:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jButton9))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(FirstY1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(FirstX1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SecondY1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SecondX1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel19))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(SecondX1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel20))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(SecondY1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel21)))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(FirstX1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel17))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(FirstY1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel18))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton9)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        BresX5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BresX5ActionPerformed(evt);
            }
        });

        BresY5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BresY5ActionPerformed(evt);
            }
        });

        jLabel22.setText("X:");

        jLabel23.setText("Y:");

        jLabel24.setText("to");

        BresX6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BresX6ActionPerformed(evt);
            }
        });

        jLabel25.setText("X:");

        BresY6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BresY6ActionPerformed(evt);
            }
        });

        jButton10.setText("Calculate");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel26.setText("Y:");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jButton10))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(BresY5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(BresX5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BresY6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BresX6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel24))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(BresX6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel25))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(BresY6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel26)))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(BresX5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel22))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(BresY5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel23))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton10)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Graphics Algorithms");

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel1.setText("Algorithms");

        DDAButton.setText("DDA");
        DDAButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DDAButtonActionPerformed(evt);
            }
        });

        BresenhamButton.setText("Bresenham");
        BresenhamButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BresenhamButtonActionPerformed(evt);
            }
        });

        SymmetricButton.setText("Symmetric Plotting");
        SymmetricButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SymmetricButtonActionPerformed(evt);
            }
        });

        MidpointButton.setText("Midpoint");
        MidpointButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MidpointButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MainPanelLayout = new javax.swing.GroupLayout(MainPanel);
        MainPanel.setLayout(MainPanelLayout);
        MainPanelLayout.setHorizontalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainPanelLayout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(37, 37, 37))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(DDAButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MidpointButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SymmetricButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BresenhamButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        MainPanelLayout.setVerticalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DDAButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BresenhamButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SymmetricButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MidpointButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        FirstX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FirstXActionPerformed(evt);
            }
        });

        FirstY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FirstYActionPerformed(evt);
            }
        });

        jLabel2.setText("X:");

        jLabel3.setText("Y:");

        jLabel4.setText("to");

        SecondX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SecondXActionPerformed(evt);
            }
        });

        jLabel5.setText("X:");

        SecondY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SecondYActionPerformed(evt);
            }
        });

        jButton6.setText("Calculate");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel6.setText("Y:");

        jLabel14.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel14.setText("DDA");

        jButton2.setText("<-");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DDAPanelLayout = new javax.swing.GroupLayout(DDAPanel);
        DDAPanel.setLayout(DDAPanelLayout);
        DDAPanelLayout.setHorizontalGroup(
            DDAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DDAPanelLayout.createSequentialGroup()
                .addGroup(DDAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DDAPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(DDAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(DDAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel14)
                            .addGroup(DDAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(DDAPanelLayout.createSequentialGroup()
                                    .addComponent(FirstY, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(DDAPanelLayout.createSequentialGroup()
                                    .addComponent(FirstX, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(DDAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SecondY, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SecondX, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(DDAPanelLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jButton6))
                    .addComponent(jButton2))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        DDAPanelLayout.setVerticalGroup(
            DDAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DDAPanelLayout.createSequentialGroup()
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 22, Short.MAX_VALUE)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(DDAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DDAPanelLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel4))
                    .addGroup(DDAPanelLayout.createSequentialGroup()
                        .addGroup(DDAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SecondX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(DDAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SecondY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addGroup(DDAPanelLayout.createSequentialGroup()
                        .addGroup(DDAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FirstX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(DDAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FirstY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6)
                .addGap(20, 20, 20))
        );

        GraphPanel = new Panelope();

        javax.swing.GroupLayout GraphPanelLayout = new javax.swing.GroupLayout(GraphPanel);
        GraphPanel.setLayout(GraphPanelLayout);
        GraphPanelLayout.setHorizontalGroup(
            GraphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 538, Short.MAX_VALUE)
        );
        GraphPanelLayout.setVerticalGroup(
            GraphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        PointsArea.setColumns(20);
        PointsArea.setRows(5);
        jScrollPane1.setViewportView(PointsArea);

        jButton12.setText("Reset");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PointsPanelLayout = new javax.swing.GroupLayout(PointsPanel);
        PointsPanel.setLayout(PointsPanelLayout);
        PointsPanelLayout.setHorizontalGroup(
            PointsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PointsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PointsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PointsPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(GraphPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PointsPanelLayout.createSequentialGroup()
                        .addComponent(jButton12)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PointsPanelLayout.setVerticalGroup(
            PointsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PointsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PointsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
                    .addComponent(GraphPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton12)
                .addContainerGap())
        );

        MidH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MidHActionPerformed(evt);
            }
        });

        MidR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MidRActionPerformed(evt);
            }
        });

        jLabel12.setText("H:");

        jLabel13.setText("R:");

        MidK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MidKActionPerformed(evt);
            }
        });

        jLabel15.setText("K:");

        jButton8.setText("Calculate");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel33.setText("Midpoint");

        jButton5.setText("<-");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MidpointPanelLayout = new javax.swing.GroupLayout(MidpointPanel);
        MidpointPanel.setLayout(MidpointPanelLayout);
        MidpointPanelLayout.setHorizontalGroup(
            MidpointPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MidpointPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(MidpointPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MidpointPanelLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(MidpointPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(MidpointPanelLayout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MidR, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton8))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MidpointPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MidH, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MidK, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38))))
            .addGroup(MidpointPanelLayout.createSequentialGroup()
                .addComponent(jButton5)
                .addGap(20, 20, 20)
                .addComponent(jLabel33)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        MidpointPanelLayout.setVerticalGroup(
            MidpointPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MidpointPanelLayout.createSequentialGroup()
                .addGroup(MidpointPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MidpointPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(MidpointPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MidpointPanelLayout.createSequentialGroup()
                        .addGroup(MidpointPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MidK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(MidpointPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MidR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)))
                    .addGroup(MidpointPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(MidH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8)
                .addContainerGap())
        );

        SymH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SymHActionPerformed(evt);
            }
        });

        SymR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SymRActionPerformed(evt);
            }
        });

        jLabel27.setText("H:");

        jLabel28.setText("R:");

        SymK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SymKActionPerformed(evt);
            }
        });

        jLabel30.setText("K:");

        jButton11.setText("Calculate");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel32.setText("Symmetric Plotting");

        jButton3.setText("<-");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SymmetricPanelLayout = new javax.swing.GroupLayout(SymmetricPanel);
        SymmetricPanel.setLayout(SymmetricPanelLayout);
        SymmetricPanelLayout.setHorizontalGroup(
            SymmetricPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SymmetricPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SymmetricPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SymmetricPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(SymmetricPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton11)
                            .addComponent(SymR, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(82, 82, 82))
                    .addGroup(SymmetricPanelLayout.createSequentialGroup()
                        .addGroup(SymmetricPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel32)
                            .addGroup(SymmetricPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(SymmetricPanelLayout.createSequentialGroup()
                        .addComponent(SymH, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SymK, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(SymmetricPanelLayout.createSequentialGroup()
                .addComponent(jButton3)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        SymmetricPanelLayout.setVerticalGroup(
            SymmetricPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SymmetricPanelLayout.createSequentialGroup()
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SymmetricPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SymH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27)
                    .addComponent(jLabel30)
                    .addComponent(SymK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SymmetricPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SymR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28))
                .addGap(18, 18, 18)
                .addComponent(jButton11)
                .addContainerGap())
        );

        BresX1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BresX1ActionPerformed(evt);
            }
        });

        BresY1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BresY1ActionPerformed(evt);
            }
        });

        jLabel7.setText("X:");

        jLabel8.setText("Y:");

        jLabel9.setText("to");

        BresX2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BresX2ActionPerformed(evt);
            }
        });

        jLabel10.setText("X:");

        BresY2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BresY2ActionPerformed(evt);
            }
        });

        jButton7.setText("Calculate");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel11.setText("Y:");

        jLabel16.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel16.setText("Bresenham");

        jButton4.setText("<-");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BresenhamPanelLayout = new javax.swing.GroupLayout(BresenhamPanel);
        BresenhamPanel.setLayout(BresenhamPanelLayout);
        BresenhamPanelLayout.setHorizontalGroup(
            BresenhamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BresenhamPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BresenhamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BresenhamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addGroup(BresenhamPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jButton7))
                    .addGroup(BresenhamPanelLayout.createSequentialGroup()
                        .addGroup(BresenhamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BresX1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BresY1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9)
                        .addGroup(BresenhamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(BresenhamPanelLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BresY2))
                            .addGroup(BresenhamPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BresX2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(BresenhamPanelLayout.createSequentialGroup()
                .addComponent(jButton4)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        BresenhamPanelLayout.setVerticalGroup(
            BresenhamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BresenhamPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(BresenhamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BresenhamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BresenhamPanelLayout.createSequentialGroup()
                            .addGroup(BresenhamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(BresX1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(BresenhamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(BresY1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8)))
                        .addGroup(BresenhamPanelLayout.createSequentialGroup()
                            .addGroup(BresenhamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(BresX2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(BresenhamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(BresY2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BresenhamPanelLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)))
                .addComponent(jButton7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(DDAPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(SymmetricPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BresenhamPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(MidpointPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(PointsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PointsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(MainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(MidpointPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DDAPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BresenhamPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SymmetricPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        DDAPanel.setVisible(false);
        PointsPanel.setVisible(false);
        MidpointPanel.setVisible(false);
        SymmetricPanel.setVisible(false);
        BresenhamPanel.setVisible(false);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FirstXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FirstXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FirstXActionPerformed

    private void FirstYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FirstYActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FirstYActionPerformed

    private void SecondXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SecondXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SecondXActionPerformed

    private void SecondYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SecondYActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SecondYActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        int x1 = Integer.parseInt(FirstX.getText());
        int x2 = Integer.parseInt(SecondX.getText());
        int y1 = Integer.parseInt(FirstY.getText());
        int y2 = Integer.parseInt(SecondY.getText()); //kukunin yung mga text sa loob nung mga textfields tapos gagawing int

        float deltaY = abs(y2 - y1);
        float deltaX = abs(x2 - x1);
        float slope = deltaY / deltaX;
        float inverseSlope = deltaX / deltaY;

        int RealY = y1;
        int RealX = x1;
        jButton12ActionPerformed(evt);
        float Yvalue = y1;
        float Xvalue = x1;
        int pointNoX = 0;
        int pointNoY = 0;
        System.out.println(deltaX + " and " + deltaY);
        if (deltaX >= deltaY) {
            if (x1 < x2) {
                for (int i = x1; i < x2 + 1; i++) {
                    PointsArea.setText(PointsArea.getText() + "(" + i + "," + RealY + ")\n");

                    xPointsGiven.add(pointNoX, i);
                    yPointsGiven.add(pointNoY, RealY);

                    pointNoX++;
                    pointNoY++;
                    if (y2 > Yvalue) {
                        Yvalue = Yvalue + slope;
                        RealY = RoundOff(Yvalue);

                    } else {
                        Yvalue = Yvalue - slope;
                        RealY = RoundOff(Yvalue);
                        // String[] split=splitFloat.split("."); 
                        //RealY = RoundOff(split[1],RealY);
                    }
                }
            } else {
                for (int i = x1; i > x2 + 1; i--) {
                    PointsArea.setText(PointsArea.getText() + "(" + i + "," + RealY + ")\n");

                    xPointsGiven.add(pointNoX, i);
                    yPointsGiven.add(pointNoY, RealY);

                    pointNoX++;
                    pointNoY++;
                    if (y2 > Yvalue) {
                        Yvalue = Yvalue + slope;
                        RealY = RoundOff(Yvalue);

                    } else {
                        Yvalue = Yvalue - slope;
                        RealY = RoundOff(Yvalue);

                    }
                }
            }
            plot = true;
            GraphPanel.revalidate();
            GraphPanel.repaint();
        } else if (deltaY > deltaX) {
            if (y1 < y2) {
                for (int i = y1; i < y2 - 1; i++) {
                    PointsArea.setText(PointsArea.getText() + "(" + RealX + "," + i + ")\n");

                    xPointsGiven.add(pointNoX, RealX);
                    yPointsGiven.add(pointNoY, i);

                    pointNoX++;
                    pointNoY++;

                    if (x2 > Xvalue) {
                        Xvalue = Xvalue + inverseSlope;
                        RealX = RoundOff(Xvalue);

                    } else {
                        Xvalue = Xvalue - inverseSlope;
                        RealX = RoundOff(Xvalue);
                        // String[] split=splitFloat.split("."); 
                        //RealY = RoundOff(split[1],RealY);
                    }
                }
            } else {
                for (int i = y1; i > y2 - 1; i--) {
                    PointsArea.setText(PointsArea.getText() + "(" + RealX + "," + i + ")\n");

                    xPointsGiven.add(pointNoX, RealX);
                    yPointsGiven.add(pointNoY, i);

                    pointNoX++;
                    pointNoY++;
                    if (x2 > Xvalue) {
                        Xvalue = Xvalue + inverseSlope;
                        RealX = RoundOff(Xvalue);

                    } else {
                        Xvalue = Xvalue - inverseSlope;
                        RealX = RoundOff(Xvalue);
                        // String[] split=splitFloat.split("."); 
                        //RealY = RoundOff(split[1],RealY);
                    }
                }
            }
            plot = true;
            GraphPanel.revalidate();
            GraphPanel.repaint();
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void BresX1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BresX1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BresX1ActionPerformed

    private void BresY1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BresY1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BresY1ActionPerformed

    private void BresX2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BresX2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BresX2ActionPerformed

    private void BresY2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BresY2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BresY2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        int pointNoX = 0;
        int pointNoY = 0;
        jButton12ActionPerformed(evt);
        int x1 = Integer.parseInt(BresX1.getText());
        int x2 = Integer.parseInt(BresX2.getText());
        int y1 = Integer.parseInt(BresY1.getText());
        int y2 = Integer.parseInt(BresY2.getText());

        float deltaY = abs(y2 - y1);
        float deltaX = abs(x2 - x1);
        float slope = deltaY / deltaX;
        float delta2X = deltaX * 2;
        float delta2Y = deltaY * 2;
        float deltaSubX = delta2X - delta2Y;

        float deltaSubY = delta2Y - delta2X;
        float firstR = 0;
        float TheY = y1;
        float TheX = x1;
        float TheYBefore = y1;
        if (deltaX > deltaY) {
            if (x2 > x1) { //Incrementing X
                firstR = delta2Y - deltaX;

                //System.out.println("THE R IS1 " + firstR);
                PointsArea.setText(PointsArea.getText() + "(" + x1 + "," + y1 + ")\n");
                xPointsGiven.add(pointNoX, x1);
                yPointsGiven.add(pointNoY, y1);

                //kung increment or decrement            
                if (y2 > y1) {
                    for (int i = x1 + 1; i < x2 + 1; i++) {
                        System.out.println(firstR + "RSSSS");
                        if (firstR < 0) { //retain
                            firstR = firstR + delta2Y;
                            PointsArea.setText(PointsArea.getText() + "(" + i + "," + (int) TheY + ")\n");
                            xPointsGiven.add(pointNoX, i);
                            yPointsGiven.add(pointNoY, RoundOff(TheY));
                            plot = true;
                            repaint();
                        } else { //or increment y
                            firstR = firstR + deltaSubY;
                            TheYBefore = TheY;
                            TheY = TheY + 1;
                            PointsArea.setText(PointsArea.getText() + "(" + i + "," + (int) TheY + ") \n");
                            xPointsGiven.add(pointNoX, i);
                            yPointsGiven.add(pointNoY, RoundOff(TheY));
                            plot = true;
                            repaint();
                        }
                    }
                } else {//decrement Y
                    for (int i = x1 + 1; i < x2 + 1; i++) {
                        if (firstR < 0) { //if negative, retain
                            firstR = firstR + delta2Y;
                            PointsArea.setText(PointsArea.getText() + "(" + i + "," + (int) TheY + ")\n");
                            xPointsGiven.add(pointNoX, i);
                            yPointsGiven.add(pointNoY, RoundOff(TheY));
                            plot = true;
                            repaint();
                        } else { //else, decrement y
                            firstR = firstR + deltaSubY;
                            TheYBefore = TheY;
                            TheY = TheY - 1;
                            PointsArea.setText(PointsArea.getText() + "(" + i + "," + (int) TheY + ") \n");
                            xPointsGiven.add(pointNoX, i);
                            yPointsGiven.add(pointNoY, RoundOff(TheY));
                            plot = true;
                            repaint();
                        }
                    }
                }
            } else { //decrementing X
                firstR = delta2Y - deltaX;

                PointsArea.setText(PointsArea.getText() + "(" + x1 + "," + y1 + ")\n");
                xPointsGiven.add(pointNoX, x1);
                yPointsGiven.add(pointNoY, y1);

                //kung increment or decrement            
                if (y2 > y1) {
                    for (int i = x1 - 1; i > x2 - 1; i--) {
                        System.out.println(firstR + "RSSSS");
                        if (firstR < 0) {
                            firstR = firstR + delta2Y;
                            //System.out.println("THE R IS2 " + firstR);
                            PointsArea.setText(PointsArea.getText() + "(" + i + "," + (int) TheY + ")\n");
                            xPointsGiven.add(pointNoX, i);
                            yPointsGiven.add(pointNoY, RoundOff(TheY));
                            plot = true;
                            repaint();
                        } else {
                            firstR = firstR + deltaSubY;
                            TheYBefore = TheY;
                            TheY = TheY + 1;
                            PointsArea.setText(PointsArea.getText() + "(" + i + "," + (int) TheY + ") \n");
                            xPointsGiven.add(pointNoX, i);
                            yPointsGiven.add(pointNoY, RoundOff(TheY));
                            plot = true;
                            repaint();
                        }
                    }
                } else {
                    for (int i = x1 - 1; i > x2 - 1; i--) {
                        if (firstR < 0) { //if negative, retain
                            firstR = firstR + delta2Y;
                            PointsArea.setText(PointsArea.getText() + "(" + i + "," + (int) TheY + ")\n");
                            xPointsGiven.add(pointNoX, i);
                            yPointsGiven.add(pointNoY, RoundOff(TheY));
                            plot = true;
                            repaint();
                        } else { //else, decrement y
                            firstR = firstR + deltaSubY;
                            TheYBefore = TheY;
                            TheY = TheY - 1;
                            PointsArea.setText(PointsArea.getText() + "(" + i + "," + (int) TheY + ") \n");
                            xPointsGiven.add(pointNoX, i);
                            yPointsGiven.add(pointNoY, RoundOff(TheY));
                            plot = true;
                            repaint();
                        }
                    }
                }
            }
        } else { //deltaY is greater than X
            if (y2 > y1) { //Incrementing Y
                firstR = delta2X - deltaY;

                System.out.println("THE R IS1 " + firstR);
                PointsArea.setText(PointsArea.getText() + "(" + x1 + "," + y1 + ")\n");
                xPointsGiven.add(pointNoX, x1);
                yPointsGiven.add(pointNoY, y1);

                //kung increment or decrement            
                if (x2 > x1) {
                    for (int i = y1 + 1; i < y2 + 1; i++) {
                        if (firstR < 0) { //retain
                            firstR = firstR + delta2X;
                            PointsArea.setText(PointsArea.getText() + "(" + (int) TheX + "," + i + ")\n");
                            xPointsGiven.add(pointNoX, RoundOff(TheX));
                            yPointsGiven.add(pointNoY, i);
                            plot = true;
                            repaint();
                        } else { //or increment X
                            firstR = firstR + deltaSubX;
                            TheYBefore = TheY;
                            TheX = TheX + 1;
                            PointsArea.setText(PointsArea.getText() + "(" + (int) TheX + "," + i + ")\n");
                            xPointsGiven.add(pointNoX, RoundOff(TheX));
                            yPointsGiven.add(pointNoY, i);
                            plot = true;
                            repaint();
                        }
                    }
                } else {//decrement X
                    for (int i = y1 + 1; i < y2 + 1; i++) {
                        if (firstR < 0) { //if negative, retain
                            firstR = firstR + delta2X;
                            PointsArea.setText(PointsArea.getText() + "(" + (int) TheX + "," + i + ")\n");
                            xPointsGiven.add(pointNoX, RoundOff(TheX));
                            yPointsGiven.add(pointNoY, i);
                            plot = true;
                            repaint();
                        } else { //else, decrement y
                            firstR = firstR + deltaSubX;
                            TheYBefore = TheY;
                            TheX = TheX - 1;
                            PointsArea.setText(PointsArea.getText() + "(" + (int) TheX + "," + i + ")\n");
                            xPointsGiven.add(pointNoX, RoundOff(TheX));
                            yPointsGiven.add(pointNoY, i);
                            plot = true;
                            repaint();
                        }
                    }
                }
            } else {
                firstR = delta2X - deltaY;

                System.out.println("THE R IS1 " + firstR);
                PointsArea.setText(PointsArea.getText() + "(" + x1 + "," + y1 + ")\n");
                xPointsGiven.add(pointNoX, x1);
                yPointsGiven.add(pointNoY, y1);
                
                //kung increment or decrement     
                if (x2 > x1) {
                    for (int i = y1-1; i > y2 - 1; i--) {
                        if (firstR < 0) { //retain
                            firstR = firstR + delta2X;
                            PointsArea.setText(PointsArea.getText() + "(" + (int) TheX + "," + i + ")\n");
                            xPointsGiven.add(pointNoX, RoundOff(TheX));
                            yPointsGiven.add(pointNoY, i);
                            plot = true;
                            repaint();
                        } else { //or increment X
                            firstR = firstR + deltaSubX;
                            TheYBefore = TheY;
                            TheX = TheX + 1;
                            PointsArea.setText(PointsArea.getText() + "(" + (int) TheX + "," + i + ")\n");
                            xPointsGiven.add(pointNoX, RoundOff(TheX));
                            yPointsGiven.add(pointNoY, i);
                            plot = true;
                            repaint();
                        }
                        System.out.println(firstR + "------------------");
                        System.out.println(firstR < 0);
                    }
                } else {//decrement X
                    for (int i = y1 - 1; i > y2 - 1; i--) {
                        if (firstR < 0) { //if negative, retain
                            firstR = firstR + delta2X;
                            PointsArea.setText(PointsArea.getText() + "(" + (int) TheX + "," + i + ")\n");
                            xPointsGiven.add(pointNoX, RoundOff(TheX));
                            yPointsGiven.add(pointNoY, i);
                            plot = true;
                            repaint();
                        } else { //else, decrement y
                            firstR = firstR + deltaSubX;
                            TheYBefore = TheY;
                            TheX = TheX - 1;
                            PointsArea.setText(PointsArea.getText() + "(" + (int) TheX + "," + i + ")\n");
                            xPointsGiven.add(pointNoX, RoundOff(TheX));
                            yPointsGiven.add(pointNoY, i);
                            plot = true;
                            repaint();
                        }
                    }
                }
            }

        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void SymmetricButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SymmetricButtonActionPerformed
        MainPanel.setVisible(false);
        SymmetricPanel.setVisible(true);
        PointsPanel.setVisible(true);
        pack();
    }//GEN-LAST:event_SymmetricButtonActionPerformed

    private void MidHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MidHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MidHActionPerformed

    private void MidRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MidRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MidRActionPerformed

    private void MidKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MidKActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MidKActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
       int x1=Integer.parseInt(MidH.getText());
       int y1=Integer.parseInt(MidK.getText());
       int pointNoX = 0;
       int pointNoY = 0;
       int r=Integer.parseInt(MidR.getText());
        int d=(5/4)*r;
        int x=0;
        int y=r;
        do
        {
        double xd=Math.round(x);
        double yd=Math.round(y);
        int p1X = (int)yd+x1;
        int p1Y = (int)xd+y1;
         int p2X = (int)xd+x1;
        int p2Y = (int)yd+y1;
        int p3X = (int)xd+x1;
        int p3Y = (int)-yd+y1;
        int p4X = (int)yd+x1;
        int p4Y = (int)-xd+y1;
        int p5X = (int)-yd+x1;
        int p5Y = (int)-xd+y1;
        int p6X = (int)-xd+y1;
        int p6Y = (int)-yd+x1;
        int p7X = (int)-xd+y1;
        int p7Y = (int)yd+x1;
        int p8X = (int)-yd+x1;
        int p8Y = (int)xd+y1;
       
       PointsArea.setText(PointsArea.getText() + "(" +  p1X + "," + p1Y + ")\n"); 
       PointsArea.setText(PointsArea.getText() + "(" +  p2X + "," + p2Y + ")\n"); 
       PointsArea.setText(PointsArea.getText() + "(" +  p3X + "," + p3Y + ")\n"); 
       PointsArea.setText(PointsArea.getText() + "(" +  p4X + "," + p4Y + ")\n"); 
       PointsArea.setText(PointsArea.getText() + "(" +  p5X + "," + p5Y + ")\n"); 
       PointsArea.setText(PointsArea.getText() + "(" +  p6X + "," + p6Y + ")\n"); 
       PointsArea.setText(PointsArea.getText() + "(" +  p7X + "," + p7Y + ")\n"); 
       PointsArea.setText(PointsArea.getText() + "(" +  p8X + "," + p8Y + ")\n"); 
       
       xPointsGiven.add(pointNoX, p1X);
       yPointsGiven.add(pointNoY, p1Y);
       xPointsGiven.add(pointNoX, p2X);
       yPointsGiven.add(pointNoY, p2Y);
       xPointsGiven.add(pointNoX, p3X);
       yPointsGiven.add(pointNoY, p3Y);
       xPointsGiven.add(pointNoX, p4X);
       yPointsGiven.add(pointNoY, p4Y);
       xPointsGiven.add(pointNoX, p5X);
       yPointsGiven.add(pointNoY, p5Y);
       xPointsGiven.add(pointNoX, p6X);
       yPointsGiven.add(pointNoY, p6Y);
       xPointsGiven.add(pointNoX, p7X);
       yPointsGiven.add(pointNoY, p7Y);
       xPointsGiven.add(pointNoX, p8X);
       yPointsGiven.add(pointNoY, p8Y);
       
       System.out.println(p1X + " , " + p1Y);
       System.out.println(p2X + " , " + p2Y);
       System.out.println(p3X + " , " + p3Y);
       System.out.println(p4X + " , " + p4Y);
       System.out.println(p5X + " , " + p5Y);
       System.out.println(p6X + " , " + p6Y);
       System.out.println(p7X + " , " + p7Y);
       System.out.println(p8X + " , " + p8Y);
        
        if(d<0)
        {
        d=d+2*x+3;
        }
        else
        {
        d=d+2*(x-y)+5;                         
        y=y-1;              
        }
        x=x+1;
        }
        while (x<y);
        init1(evt);
        plot = true;
        repaint();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void FirstX1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FirstX1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FirstX1ActionPerformed

    private void FirstY1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FirstY1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FirstY1ActionPerformed

    private void SecondX1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SecondX1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SecondX1ActionPerformed

    private void SecondY1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SecondY1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SecondY1ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void BresX5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BresX5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BresX5ActionPerformed

    private void BresY5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BresY5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BresY5ActionPerformed

    private void BresX6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BresX6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BresX6ActionPerformed

    private void BresY6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BresY6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BresY6ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed

    private void SymHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SymHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SymHActionPerformed

    private void SymRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SymRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SymRActionPerformed

    private void SymKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SymKActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SymKActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
      int x1=Integer.parseInt(SymH.getText());
       int y1=Integer.parseInt(SymK.getText());
       int pointNoX = 0;
       int pointNoY = 0;
       int r=Integer.parseInt(SymR.getText());  
       double x0 = 0;
        double y0 = 0;
        boolean isStart = true;
        String temp="";
        for (double angle = 0; angle <= 2*Math.PI; angle = angle + Math.PI/360) {

            double x = r * Math.cos(angle);
            double y = r * Math.sin(angle);

            
            double xd=Math.round(x0);
            double yd=Math.round(y0);

            if (!isStart) {
                //drawLine(x0,  y0, x, y, width, height, g);
                int xs = (int)xd+x1;
                int ys = (int)yd+y1;
                if(temp.compareTo("("+ xs+ "," + ys + ")")!=0)
                    PointsArea.setText(PointsArea.getText() + "("+ xs+ "," + ys + ")\n");
                
                temp = "("+ xs+ "," + ys + ")";
                xPointsGiven.add(pointNoX, xs);
                yPointsGiven.add(pointNoY, ys);
            }

            isStart = false;

            x0 = x;
            y0 = y;
        }
        plot=true;
        repaint();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void DDAButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DDAButtonActionPerformed
        //jButton12ActionPerformed(evt);
        MainPanel.setVisible(false);
        DDAPanel.setVisible(true);
        PointsPanel.setVisible(true);
        pack();
    }//GEN-LAST:event_DDAButtonActionPerformed

    private void BresenhamButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BresenhamButtonActionPerformed
        //jButton12ActionPerformed(evt);
        MainPanel.setVisible(false);
        BresenhamPanel.setVisible(true);
        PointsPanel.setVisible(true);
        pack();
    }//GEN-LAST:event_BresenhamButtonActionPerformed

    private void MidpointButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MidpointButtonActionPerformed
        //jButton12ActionPerformed(evt);
        MainPanel.setVisible(false);
        MidpointPanel.setVisible(true);
        PointsPanel.setVisible(true);
        pack();
    }//GEN-LAST:event_MidpointButtonActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        PointsArea.setText("");
        xPointsGiven.clear();
        yPointsGiven.clear();
        plot=true;
        repaint();
        
        
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jButton12ActionPerformed(evt);
        MainPanel.setVisible(true);
        DDAPanel.setVisible(false);
        PointsPanel.setVisible(false);
        pack();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        jButton12ActionPerformed(evt);
        MainPanel.setVisible(true);
        MidpointPanel.setVisible(false);
        PointsPanel.setVisible(false);
        pack();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        jButton12ActionPerformed(evt);
        MainPanel.setVisible(true);
        BresenhamPanel.setVisible(false);
        PointsPanel.setVisible(false);
        pack();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jButton12ActionPerformed(evt);
        MainPanel.setVisible(true);
        SymmetricPanel.setVisible(false);
        PointsPanel.setVisible(false);
        pack();
    }//GEN-LAST:event_jButton3ActionPerformed
    public int RoundOff(float x) {

        int wholenumber = 0;
        float decimal = 0;
        wholenumber = (int) x;
        decimal = x - wholenumber;

        if (decimal * 2 >= 1) {
            return wholenumber + 1;
        } else {
            return wholenumber;
        }

    }
    private JPanel Panelopy;

    class Panelope extends JPanel {

        private List<Point> fillCells;

        Panelope() {
            fillCells = new ArrayList<Point>(25);
            // set a preferred size for the custom panel.
        }

        @Override
        public void paintComponent(Graphics g) {
            super.paintComponent(g);

            g.setColor(Color.BLACK);
            g.drawRect(10, 10, 200, 200);
            if (plot == true) {
                for (int x = 0; x < xPointsGiven.size(); x++) {
                    System.out.println(xPointsGiven.get(x) + " a " + yPointsGiven.get(x));
                    g.setColor(Color.RED);
                    int pointX = 5 + ((int) xPointsGiven.get(x) * 5);
                    int pointY = 5 + ((int) yPointsGiven.get(x) * 5);
                    g.fillRect(pointX, pointY, 5, 5);
                }
                plot = false;
                g.setColor(Color.BLACK);
            }
            for (int i = 10; i <= 790; i += 5) {
                g.drawLine(i, 10, i, 495);
            }

            for (int i = 10; i <= 500; i += 5) {
                g.drawLine(10, i, 535, i);
            }

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(indexFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(indexFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(indexFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(indexFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new indexFrame().setVisible(true);
            }
        });
    }
    
    public void init1(java.awt.event.ActionEvent evt)
    {
        SymH.setText(MidH.getText());
        SymK.setText(MidK.getText());
        SymR.setText(MidR.getText());
        jButton12ActionPerformed(evt);
        jButton11ActionPerformed(evt);
        
                }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BresX1;
    private javax.swing.JTextField BresX2;
    private javax.swing.JTextField BresX5;
    private javax.swing.JTextField BresX6;
    private javax.swing.JTextField BresY1;
    private javax.swing.JTextField BresY2;
    private javax.swing.JTextField BresY5;
    private javax.swing.JTextField BresY6;
    private javax.swing.JButton BresenhamButton;
    private javax.swing.JPanel BresenhamPanel;
    private javax.swing.JButton DDAButton;
    private javax.swing.JPanel DDAPanel;
    private javax.swing.JTextField FirstX;
    private javax.swing.JTextField FirstX1;
    private javax.swing.JTextField FirstY;
    private javax.swing.JTextField FirstY1;
    private javax.swing.JPanel GraphPanel;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JTextField MidH;
    private javax.swing.JTextField MidK;
    private javax.swing.JTextField MidR;
    private javax.swing.JButton MidpointButton;
    private javax.swing.JPanel MidpointPanel;
    private javax.swing.JTextArea PointsArea;
    private javax.swing.JPanel PointsPanel;
    private javax.swing.JTextField SecondX;
    private javax.swing.JTextField SecondX1;
    private javax.swing.JTextField SecondY;
    private javax.swing.JTextField SecondY1;
    private javax.swing.JTextField SymH;
    private javax.swing.JTextField SymK;
    private javax.swing.JTextField SymR;
    private javax.swing.JButton SymmetricButton;
    private javax.swing.JPanel SymmetricPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
